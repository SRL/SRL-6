(*
Drawing
=======

The drawing file holds TMufasaBitmap drawing functions to aid drawing onto bitmaps.

*)

{$include_once ../utilities/wrappers.simba}
{$include_once ../tmp.simba}

type
  TColorArray = array of TColor;

{*
const __SHADOW_COLOR
~~~~~~~~~~~~~~~~~~~~

Integer constant that stores the shadow color for adding a shadow for text drawing.

*}
const
  __SHADOW_COLOR = 65536;

(*
TMufasaBitmap.clear
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.clear();

Will clear the entire TMufasaBitmap

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.clear();

*)
procedure TMufasaBitmap.clear();
begin
  self.drawClear(0);
end;

(*
TMufasaBitmap.clearArea
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.clearArea(area: TBox);

Will clear the desired area of the TMufasaBitmap

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.clearArea(intToBox(5, 5, 10, 10));

*)
procedure TMufasaBitmap.clearArea(area: TBox);
begin
  self.rectangle(area, 0);
end;

(*
TMufasaBitmap.drawBox
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawBox(box: TBox; fill: boolean; color: TColor);

Draws a TBox onto the TMufasaBitmap

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawBox(intToBox(50, 50, 345, 345), false, clLime);

*)
procedure TMufasaBitmap.drawBox(box: TBox; fill: boolean; color: TColor);
var
  tpa: TPointArray;
begin
  if (not fill) then
  begin
    try
      tpa := edgeFromBox(box);
    except
      tpa := [point(box.x1, box.y1)];
    finally
      self.drawTPA(tpa, color);
    end;
  end else
    self.rectangle(box, color);
end;

(*
TMufasaBitmap.drawBoxes
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawBoxes(boxArr: TBoxArray; fill: boolean; color: TColor);

Draws a TBoxArray onto the TMufasaBitmap.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawBoxes([intToBox(10, 10, 20, 20), intToBox(50, 50, 250, 250),
                   intToBox(440, 440, 600, 600)], true, clRed);

*)
procedure TMufasaBitmap.drawBoxes(boxArr: TBoxArray; fill: boolean; color: TColor);
var
  i, h: integer;
begin
  h := high(boxArr);

  for i := 0 to h do
    self.drawBox(boxArr[i], fill, color);
end;

(*
TMufasaBitmap.drawBoxes; overload
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawBoxes(boxArr: TBoxArray; fill: boolean; colors: TColorArray); overload;

Same as TMufasaBitmap.drawBoxes() but accepts a extra paramter that allows a
color for each box.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawBoxes([intToBox(10, 10, 20, 20), intToBox(50, 50, 250, 250),
                   intToBox(440, 440, 600, 600)], true, [clRed, clLime, clOrange]);

*)
procedure TMufasaBitmap.drawBoxes(boxArr: TBoxArray; fill: boolean; colors: TColorArray); overload;
var
  l, i: integer;
begin
  l := length(boxArr);

  if (l <> length(colors)) then
  begin
    writeln('-- ERROR: TMufasaBitmap.drawBoxes(): boxArr/colors lengths differ');
    exit();
  end;

  for i := 0 to (l-1) do
    self.drawBox(boxArr[i], fill, colors[i]);
end;

(*
TMufasaBitmap.drawRoundBox
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawRoundBox(const box: TBox; const roundness: integer; const fill: boolean; const color: TColor);

Draws a box with "round" corners onto the TMufasaBitmap, parameter roundness
will judge curved the corners are.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawRoundBox(intToBox(222, 222, 666, 666), 111, true, clOrange);

*)
procedure TMufasaBitmap.drawRoundBox(const box: TBox; const roundness: integer; const fill: boolean; const color: TColor);
var
  tmpTBitmap: TBitmap;
  tmpMufasa: TMufasaBitmap;
begin
  tmpTBitmap.init();
  tmpMufasa.init();

  if (fill) then
    tmpTBitmap.getCanvas().getBrush().setColor(color)
  else begin
    tmpTBitmap.getCanvas().getPen().setColor(color);
    tmpTBitmap.getCanvas().getBrush().setColor(0)
  end;

  tmpTBitmap.setWidth(self.getWidth());
  tmpTBitmap.setHeight(self.getHeight());

  tmpTBitmap.getCanvas().RoundRect(box.x1, box.y1, box.x2, box.y2, roundness, roundness);

  if (self.getTransparentColorSet()) then
    tmpMufasa.SetTransparentColor(self.getTransparentColor());

  tmpMufasa.loadFromTBitmap(tmpTBitmap);
  tmpMufasa.drawTransparent(0, 0, self);

  tmpTBitmap.free();
  tmpMufasa.free();
end;

(*
TMufasaBitmap.drawBitmap
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawBitmap(bmp: integer; pnt: TPoint);

Draws a bitmap onto the TMufasaBitmap at the desired point.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawBitmap(bmp, point(50, 50));

*)
procedure TMufasaBitmap.drawBitmap(bmp: integer; pnt: TPoint);
begin
  if (bitmapExists(bmp)) then
    getMufasaBitmap(bmp).drawTransparent(pnt.x, pnt.y, self)
  else
    writeln('-- ERROR: TMufasaBitmap.drawBitmap(): bitmap does not exist');
end;

(*
TMufasaBitmap.drawBitmap; overload
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TMufasaBitmap.drawBitmap(path: string; pnt: TPoint): boolean; overload;

Same as TMufasaBitmap.drawBitmap but will load a bitmap from a file specified
by the paramter "path", will return if succesful or not.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawBitmap('simba/scripts/foo.png', point(11, 11));

*)
function TMufasaBitmap.drawBitmap(path: string; pnt: TPoint): boolean; overload;
var
  bmp: integer;
begin
  result := fileExists(path);

  if (not result) then
  begin
    writeln('-- ERROR: TMufasaBitmap.drawBitmap(): File path does not exist ("' + path + '"), result = false');
    exit();
  end;

  bmp := loadBitmap(path);
  self.drawBitmap(bmp, pnt);
  freeBitmap(bmp);
end;

(*
TMufasaBitmap.drawCross
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawCross(pnt: TPoint; size: integer; color: TColor);

Draws a cross on the TMufasaBitmap at the TPoint(pnt) with the desired size.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawCross(point(200, 200), 4, clLime);

*)
procedure TMufasaBitmap.drawCross(pnt: TPoint; size: integer; color: TColor);
begin
  if (size < 1) then
    exit();

  try
    self.lineTo(point(pnt.x - size, pnt.y - size), point(pnt.x + size, pnt.y + size), color);
    self.lineTo(point(pnt.x + size, pnt.y - size), point(pnt.x - size, pnt.y + size), color);
  except end;
end;

(*
TMufasaBitmap.drawEllipse
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawEllipse(const pnt: TPoint; const xRadius, yRadius: integer; const fill: boolean; const color: TColor);

Draws an ellipse on the TMufasaBitmap defined by 'pnt', 'xRadius', and
'yRadius'. If 'fill' is true it will fill the ellipse, otherwise it draws just
the border.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawEllipse(point(500, 500), 20, 50, true, clLime);

*)
procedure TMufasaBitmap.drawEllipse(const pnt: TPoint; const xRadius, yRadius: integer; const fill: boolean; const color: TColor);
var
  tpa: TPointArray;
begin
  tpa := tpaFromEllipse(pnt.x, pnt.y, xRadius, yRadius);

  if (fill) then
    fillEllipse(tpa);

  self.drawTPA(tpa, color);
end;

(*
TMufasaBitmap.drawCircle
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawCircle(pnt: TPoint; size: integer; fill: boolean; color: TColor);

Draws a circle on the TMufasaBitmap defined by 'pnt' and 'size'. If 'fill'
is true it will fill the circle, otherwise it draws just the border.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawCircle(point(500, 500), 50, false, clLime);

*)
procedure TMufasaBitmap.drawCircle(pnt: TPoint; size: integer; fill: boolean; color: TColor);
begin
  self.drawEllipse(pnt, size, size, fill, color);
end;

(*
TMufasaBitmap.drawPolygon
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawPolygon(polygonPnts: TPointArray; color: TColor);

Draws a line between all the points(polygonPnts) to draw a polygon-like shape on
the TMufasaBitmap.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawPolygon([point(10, 10), point(100, 100), point(500, 500), point(230, 555)], clLime);

*)
procedure TMufasaBitmap.drawPolygon(polygonPnts: TPointArray; color: TColor);
var
  i, h: Integer;
begin
  h := (high(polygonPnts) - 1);

  if (h = -1) then
    exit();

  for i := 0 to h do
    self.lineTo(polygonPnts[i], polygonPnts[i + 1], color);

  self.lineTo(polygonPnts[h + 1], polygonPnts[0], color);
end;

(*
TMufasaBitmap.drawText
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawText(txt: string; pnt: TPoint; font: string; shadow: boolean; color: TColor);

Draws a string(text) with the desired font onto the TMufasaBitmap at the TPoint(pnt).

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawText('hello world!', point(55, 55), upchars, false, clRed);

*)
procedure TMufasaBitmap.drawText(txt: string; pnt: TPoint; font: string; shadow: boolean; color: TColor);
var
  tpa, tpaShadow: TPointArray;
begin
  tpa := tpaFromText(txt, font);
  offsetTPA(tpa, pnt);

  if (shadow) then
  begin
    tpaShadow := copyTPA(tpa);
    offsetTPA(tpaShadow, point(1, 1));
    self.drawTPA(tpaShadow, __SHADOW_COLOR);
  end;

  self.drawTPA(tpa, color);
end;

(*
TMufasaBitmap.drawText; overload
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawText(txt: string; pnt: TPoint; color: TColor); overload;

Same as TMufasaBitmap.drawText, but no shadow boolean (enabled), and no font
parameter(will use statchars).

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawText('hello world!', point(55, 55), clLime);

*)
procedure TMufasaBitmap.drawText(txt: string; pnt: TPoint; color: TColor); overload;
begin
  self.drawText(txt, pnt, statchars, true, color);
end;

(*
TMufasaBitmap.drawTextArray
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawTextArray(txtArr: TStringArray; pnts: TPointArray; font: string; shadow: boolean; color: TColor);

Draws an array of text on the TMufasaBitmap, each index in the textArr will be
be drawn at the same point in the pnt array.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawTextArray(['hello', 'world'], [point(50, 50), point(100, 111)], bigchars, false, clBlue);

*)
procedure TMufasaBitmap.drawTextArray(txtArr: TStringArray; pnts: TPointArray; font: string; shadow: boolean; color: TColor);
var
  i, l: integer;
begin
  l := length(txtArr);

  if (l <> length(pnts)) then
  begin
    writeln('-- ERROR: TMufasaBitmap.drawTextArray(): txtArr/pnts length differ');
    exit();
  end;

  for i := 0 to l do
    self.drawText(txtArr[i], pnts[i], font, shadow, color);
end;

(*
TMufasaBitmap.drawTextLines
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.drawTextLines(txtArr: TStringArray; pnt: TPoint; font: string; shadow: boolean; color: TColor);

Draws text onto the TMufasaBitmap, each index in the txtArr is put on a different line.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.drawTextLines(['olly', 'is', 'the', 'best', ':D'], point(2, 2), statChars, false, clRed);

*)
procedure TMufasaBitmap.drawTextLines(txtArr: TStringArray; pnt: TPoint; font: string; shadow: boolean; color: TColor);
var
  atpa: T2DPointArray;
  tpa, shadowTPA: TPointArray;
  w, h, i, l: integer;
begin
  l := length(txtArr);
  setLength(atpa, l);

  for i := 0 to (l-1) do
  begin
    atpa[i] := tpaFromText(txtArr[i], font, w, h);
    offsetTPA(atpa[i], point(pnt.x, pnt.y + 1 + (i * h)));
  end;

  tpa := mergeATPA(atpa);

  if (shadow) then
  begin
    shadowTPA := copyTPA(tpa);
    offsetTPA(shadowTPA, point(1, 1));
    self.drawTPA(shadowTPA, __SHADOW_COLOR);
  end;

  self.drawTPA(tpa, color);
end;

(*
TMufasaBitmap.debug
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.debug();

Will display the TMufasaBitmap in Simba's debug image form. Note: will only
work if the bitmap is managed by simba

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.debug();
    // or for a non TMufasaBitmap
    getMufasaBitmap(bitmap).debug();

*)
procedure TMufasaBitmap.debug();
begin
  if (not bitmapExists(self.getIndex())) then
  begin
    writeln('-- ERROR: Cannot debug the bitmap because it is not managed by Simba');
    writeln('-- HINT: Example for a managed bitmap is "tmb.init(client.getMBitmaps());"');
    exit();
  end;

  clearDebugImg();
  displayDebugImgWindow(self.getWidth(), self.getHeight());
  drawBitmapDebugImg(self.getIndex());
end;

(*
TMufasaBitmap.debugTPA
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.debugTPA(tpa: TPointArray; drawPoints: boolean = true);

Will debug a TPointArray onto the TMufasaBitmap, parameter drawPoints is a optional
parameter and by default is enabled, if enabled it will draw the points in the array.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.debugTPA(tpa);

*)
procedure TMufasaBitmap.debugTPA(tpa: TPointArray; drawPoints: boolean = true);
var
  mid: TPoint;
  l: integer;
  b: TBox;
begin
  b := getTPABounds(tpa);
  mid := middleTPA(tpa);
  l := length(tpa);

  if (l < 1) then
    exit();

  if (drawPoints) then
    self.drawTPA(tpa, clWhite);

  self.drawBox(b, false, clRed);
  self.drawCross(mid, 5, clPurple);
  self.drawText('TPA Length: ' + intToStr(l), point(b.x1+2, b.y1+2), clLime);
end;

(*
TMufasaBitmap.debugATPA
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.debugATPA(const atpa: T2DPointArray);

Will debug a T2DPointArray onto the TMufasaBitmap.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.debugATPA(atpa);

*)
procedure TMufasaBitmap.debugATPA(const atpa: T2DPointArray);
var
  i, l, c: integer;
  b: TBox;
  colArr: array [0..9] of TColor;
  mid: TPoint;
begin
  colArr := [clAqua, clBlue, clFuchsia, clLime, clMaroon,
             clOrange, clNavy, clYellow, clRed, clWhite];

  l := length(atpa);
  c := 0;

  if (l < 1) then
    exit();

  for i := 0 to (l-1) do
  begin
    b := getTPABounds(atpa[i]);
    mid := middleTPA(atpa[i]);

    self.drawBox(b, false, colArr[c]);
    self.drawCross(mid, 3, colArr[c]);
    self.drawText(intToStr(i), point(b.x1 + 2, b.y1 + 2), colArr[c]);

    inc(c);

    if (c > high(colArr)) then
      c := 0;
  end;
end;

(*
TMufasaBitmap.debugDTM
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TMufasaBitmap.debugDTM(dtm: integer; area: TBox; color: TColor);

Will search for the dtm in the desired area, drawing a cross at each point that
is found.

.. note::

    by Ollybest
    Last Updated: 19 July 2013 by Ollybest

Example:

.. code-block:: pascal

    tmb.debugDTM(myDTM, mainScreen.getBounds(), clRed);

*)
procedure TMufasaBitmap.debugDTM(dtm: integer; area: TBox; color: TColor);
var
  tpa: TPointArray;
  atpa: T2DPointArray;
  l, i: integer;
  b: TBox;
const
  CROSS_SIZE = 4;
begin
  if (not dtmExists(dtm)) then
  begin
    writeln('-- ERROR: TMufasaBitmap.debugDTM(): The dtm you entered does not exist');
    exit();
  end;

  findDTMs(dtm, tpa, area);
  clearDoubleTPA(tpa);

  l := length(tpa);
  setLength(atpa, l);

  if (l < 1) then
    exit();

  for i := 0 to (l-1) do
  begin
    b := intToBox(tpa[i].x - CROSS_SIZE, tpa[i].y - CROSS_SIZE,
                  tpa[i].x + CROSS_SIZE, tpa[i].y + CROSS_SIZE);

    atpa[i] := mergeATPA([tpaFromLine(b.x1, b.y1, b.x2, b.y2),
                          tpaFromLine(b.x2, b.y1, b.x1, b.y2)]);
  end;

  tpa := mergeATPA(atpa);
  // a cross could draw off the bitmap
  filterPointsBox(tpa, area.x1, area.y1, area.x2, area.y2);

  self.drawTPA(tpa, color);
end;
