(*
Worlds
======

The worlds file is used to represent the world tab interface in the RS lobby. It
stores the functions needed to switch players between servers.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/lobby/worlds.simba>`_.

*)

{$f-}

{*
const Internal
~~~~~~~~~~~~~~

Internal constants used throughout several functions.
*}
const
  _WORLD_HIGH                = 139; // the highest number world
  _WORLD_PATH                = includePath + 'SRL-6/lib/interfaces/lobby/worlds.ini';
  _WORLD_SORT_BUTTON         = 10328724;  // top of sort buttons
  _WORLD_SORT_AREA : TBox    = [110, 215, 751, 233]; // box around all sort buttons

(*
const Order
~~~~~~~~~~~

Constants to be used with the TRSLobbyWorlds sorting functions.

Example:

.. code-block:: pascal

    lobbyWorlds.sort(WORLD_ORDER_WORLDS, false);
*)
const
  WORLD_ORDER_WORLDS   = 0;
  WORLD_ORDER_PLAYERS  = 1;
  WORLD_ORDER_ACTIVITY = 2;
  WORLD_ORDER_LOCATION = WORLD_ORDER_ACTIVITY;
  WORLD_ORDER_LOOT     = 3;
  WORLD_ORDER_TYPE     = 4;
  WORLD_ORDER_PING     = 5;

{*
type __TRSWorld
~~~~~~~~~~~~~~~

An internal type used to store individual world information.
*}
type
  __TRSWorld = record
    world: integer;
    members: boolean;
  end;

(*
type TRSLobbyWorlds
~~~~~~~~~~~~~~~~~~~

The type representing the worlds interface in the RS lobby.
*)
type
  TRSLobbyWorlds = record(TRSInterface)
    lobbyID: integer;
    worlds: array of __TRSWorld;
    worldNumArea: TBox;
  end;

(*
var lobbyWorlds
~~~~~~~~~~~~~~~

The global variable used to call any worlds interface functions/procedures.

Example:

.. code-block:: pascal

    lobbyWorlds.selectWorld(132);
*)
var
  lobbyWorlds: TRSLobbyWorlds;

{*
var Internal
~~~~~~~~~~~~

Internal worlds interface variables:
*}
var
  __worldsOrdered: boolean; // set to true if the worlds get ordered in the sorting functions

{*
TRSLobbyWorlds.__loadFromINI
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSLobbyWorlds.__loadFromINI();

Loads the world information from an INI file.

.. note::

    - by Narcle, Nava2, and Coh3n
    - Last Updated: 26 June 2013 by Coh3n

Example:

.. code-block:: pascal

    self.__loadFromINI();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSLobbyWorlds.__loadFromINI();
var
  i, c: integer;
begin
  setLength(self.worlds, _WORLD_HIGH + 1);

  for i := 0 to high(self.worlds) do
    if (readINI(toStr(i), 'world', _WORLD_PATH) <> '') then // to make sure the world exists
    begin
      self.worlds[c].members := strToBool(readINI(toStr(i), 'members', _WORLD_PATH));
      self.worlds[c].world := strToIntDef(readINI(toStr(i), 'world', _WORLD_PATH), -1);
      inc(c);
    end;

  setLength(self.worlds, c);
end;
{$ENDIF}

{*
TRSLobbyWorlds.__init
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSLobbyWorlds.__init();

Initiates the TRSLobbyWorlds variable.  Called at the end of this file.

.. note::

    - by Coh3n
    - Last Updated: 26 June 2013 by Coh3n

Example:

.. code-block:: pascal

    lobbyWorlds.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSLobbyWorlds.__init();
begin
  with self do
  begin
    name := 'RS Lobby Tab: Worlds';
    ID := ID_INTERFACE_LOBBY_WORLDS;
    parentID := ID_INTERFACE_LOBBY;
    static := true;
    lobbyID := LOBBY_WORLDS;
    SetBounds(lobby.getBounds());
    __loadFromINI();
    worldNumArea := [x1 + 35, y1 + 125, x1 + 100, y2 - 62];
  end;
end;
{$ENDIF}

{*
TRSLobbyWorlds._getWorldIndex
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds._getWorldIndex(wo: integer): integer;

Retruns the array index the world 'wo' is in.

.. note::

    - by Coh3n
    - Last Updated: 24 July 2013 by Coh3n

Example:

.. code-block:: pascal

    b := lobbyWorlds.worlds[lobbyWorlds._getWorldIndex(12)].member;
*}
function TRSLobbyWorlds._getWorldIndex(wo: integer): integer;
begin
  for result := 0 to high(self.worlds) do
    if (self.worlds[result].world = wo) then
      break;
end;

(*
TRSLobbyWorlds.isOpen
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds.isOpen(): boolean;

Returns true if the worlds interface is open.

.. note::

    - by Icefire908 & Coh3n
    - Last Updated: 23 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (lobbyWorlds.isOpen()) then
      lobbyWorlds.selectWorld(115);
*)
function TRSLobbyWorlds.isOpen(): boolean;
begin
  result := (lobby.getCurrentTab() = self.lobbyID);
end;

(*
TRSLobbyWorlds.open
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds.open(): boolean;

Returns true if the worlds interface is open.  Waits a maximum of 10 seconds
after the tab is clicked to compensate for lag.

.. note::

    - by Bionicle1800 & Coh3n
    - Last Updated: 8th August 2014 by The Mayor

Example:

.. code-block:: pascal

    if (not lobbyWorlds.isOpen()) then
      lobbyWorlds.open();
*)
function TRSLobbyWorlds.open(): boolean;
var
  t, yellow, white: integer;
  p: TPoint;
begin
  result := lobby.openTab(self.lobbyID);

  if (not self.isOpen()) then
    exit(false);

  // needed to compensate for lag
  if (result) then
  begin
    t := (getSystemTime() + randomRange(7500, 11000));

    while (getSystemTime() < t) do
    begin
      yellow := countColor(379903, self.worldNumArea);
      white := countColor(16777215, self.worldNumArea);

      if ((white + yellow) > 80) then
        exit(true);

      wait(50);
    end;

    print('TRSLobbyWorlds.open(): Worlds list taking too long to load', TDebug.SUB);
  end;
end;

{*
TRSLobbyWorlds._isWorldValid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds._isWorldValid(wo: integer): boolean;

Returns true if the world (wo) is valid.

.. note::

    - by Coh3n
    - Last Updated: 26 June 2013 by Coh3n

Example:

.. code-block:: pascal

    if (not lobbyWorlds._isWorldValid(115)) then
      exit(false);
*}
function TRSLobbyWorlds._isWorldValid(wo: integer): boolean;
var
  i: integer;
begin
  for i := 0 to high(self.worlds) do
    if (self.worlds[i].world = wo) then
      exit(true);

  print('TRSLobbyWorlds._isWorldValid(): '+toStr(wo)+' is an invalid world', TDebug.ERROR);
end;

(*
TRSLobbyWorlds.getCurrentWorld
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds.getCurrentWorld(): integer;

Returns the currently selected world.

.. note::

    - by Home & Coh3n
    - Last Updated: 8th August 2014 by The Mayor

Example:

.. code-block:: pascal

    if (not lobbyWorlds.getCurrentWorld() = 115) then
      lobbyWorlds.selectWorld(115);
*)
function TRSLobbyWorlds.getCurrentWorld(): Integer;
var
  TPA: TPointArray;
  Box: TBox;
begin
  Result := -1;
  if (not Self.isOpen()) then
    Exit();

  if (FindColors(TPA, 3088905, Self.getBounds())) then
  begin
    Box := GetTPABounds(TPA);
    Result := StrToIntDef(ExtractFromStr(Tesseract_GetText(Box.x1, Box.y1, Box.x2, Box.y2, TESS_FILTER_SMALL_CHARS_2), Numbers), -1);
  end;

  print('TRSLobbyWorlds.getCurrentWorld(): Current world is '+toStr(result), TDebug.SUB);
end;

(*
TRSLobbyWorlds.sort
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds.sort(by: integer; descending: boolean): boolean;

Sorts the worlds list by the order specified by 'by', and 'descending'.  Setting
'descending' to true will order the worlds with the largest at the top.  Valid
arguements for 'by' are:

    * WORLD_ORDER_WORLDS
    * WORLD_ORDER_PLAYERS
    * WORLD_ORDER_ACTIVITY
    * WORLD_ORDER_LOCATION
    * WORLD_ORDER_TYPE
    * WORLD_ORDER_LOOT
    * WORLD_ORDER_PING

.. note::

    - by Naum & Coh3n
    - Last Updated: 8th August 2014 by The Mayor

Example:

.. code-block:: pascal

    lobbyWorlds.sort(WORLD_ORDER_WORLDS, false); // sorts the worlds starting with 1 at the top
*)
function TRSLobbyWorlds.sort(by: integer; descending: boolean): boolean;
var
  ATPA: T2DPointArray;
  TPA: TPointArray;
  TB: TBox;
  i: Integer;
begin
  print('TRSLobbyWorlds.sort()', TDebug.HEADER);

  if (not self.isOpen()) then
    exit(false);

  if findColors(TPA, _WORLD_SORT_BUTTON, _WORLD_SORT_AREA) then
  begin
    print('Found _WORLD_SORT_BUTTON');

    ATPA := TPA.cluster(2);

    if (length(ATPA) < 1) then
    begin
      print('Didn''t find enough of _WORLD_SORT_BUTTON', TDebug.ERROR);
      print('TRSLobbyWorlds.sort(): '+toStr(result), TDebug.FOOTER);
      exit();
    end;

    sortATPAFromFirstPoint(ATPA, point(self.x, self.y));

    TB := getTPABounds(ATPA[by]);
    TB.edit(-1, 0, 1, 14);

    for i := 0 to 2 do
    begin
      if (getColor(TB.getMiddle()) = 3427397) then
        if descending then
        begin
          result := true;
          break;
        end;

      if (getColor(TB.getMiddle()) = 3032127) then
        if not descending then
        begin
          result := true;
          break;
        end;

      mouseBox(TB, MOUSE_LEFT);
      wait(randomRange(1500, 2000));
    end;
  end else
    print('Failed to find _WORLD_SORT_BUTTON', TDebug.ERROR);

  print('TRSLobbyWorlds.sort(): '+toStr(result), TDebug.FOOTER);

end;

{*
TRSLobbyWorlds._findWorldNumber
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds._findWorldNumber(var res: TPoint; wo: integer): boolean;

Searches for the text of the world 'wo'. Returns true if found. Returns it's
coordinates in 'res'.

.. note::

    - by Coh3n
    - Last Updated: 9th August 2014 by The Mayor

Example:

.. code-block:: pascal

    if (lobbyWorlds._findWorldNumber(p, 115)) then
      mouse(p.rand(5), MOUSE_LEFT);
*}
function TRSLobbyWorlds._findWorldNumber(var res: TPoint; wo: integer): boolean;
var
  i: Integer;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  Boxes: TBoxArray;
  Box: TBox;
  BMP: Integer;
  Strings: TStringArray;
begin

  {$IFDEF SIMBAMAJOR1100}
  FindColorsTolerance(TPA, clBlack, Self.worldNumArea, 25, colorSetting(1));
  ATPA := ClusterTPAEx(TPA, 20, 3);

  for i := 0 to High(ATPA) do
  begin
    Box := GetTPABounds(ATPA[i]);

    if (Box.getHeight() > 5) and (Box.getHeight() < 13) and (Box.getWidth() < 50) then
    begin
      Box.expand(3);
      Insert(Box, Boxes);
    end;
  end;

  BMP := CreateBitmap(50, 400);
  for i := 0 to High(Boxes) do
    GetMufasaBitmap(BMP).CopyClientToBitmap(Client.getIOManager(), False, 0, Max(Boxes[i].y1 - Boxes[High(Boxes)].y1, 0), Boxes[i].x1, Boxes[i].y1, Boxes[i].x2, Boxes[i].y2);

  // Prepare for Tesseract
  ResizeBitmapEx(BMP, RM_Bilinear, 50 * 3, 400 * 3);
  ThresholdAdaptiveBitmap(BMP, 0, 255, False, TM_Mean, 55);
  Strings := explode(#10, Tesseract_GetText(BMP, TESS_WHITELIST_NUMBERS));
  FreeBitmap(BMP);

  for i := 0 to high(Strings) do
    if (StrToIntDef(Trim(Strings[i]), -1) = wo) then
    begin
      Res := MiddleBox(Boxes[High(Boxes) - i]);
      Exit(True);
    end;
  {$ELSE}
  Writeln('Update your Simba for FindWorldNumber to work');
  {$ENDIF}
end;

{*
TRSLobbyWorlds._scrollToWorld
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds._scrollToWorld(var res: TPoint; wo: integer): boolean;

Uses mouseScroll to find the world 'wo'.  Returns it's corrdinates in 'res'.
Function is internal.  Use TRSLobbyWorlds.selectWorld instead.

.. note::

    - by Coh3n
    - Last Updated: 8th August 2014 by The Mayor

Example:

.. code-block:: pascal

    if (lobbyWorlds._scrollToWorld(p, 115)) then
      mouse(p, MOUSE_LEFT);
*}
function TRSLobbyWorlds._scrollToWorld(var res: TPoint; wo: integer): boolean;
const
  __COLOR_SCROLL_BAR = 3455991;
var
  t: integer;
  down: boolean;
  p: TPoint;
begin
  if (not self.isOpen()) then
    exit(false);

  p := self.getCenterPoint().rand(randomRange(-200, 200), randomRange(-50, 50));
  t := (getSystemTime() + 20000);

  repeat
    if (self._findWorldNumber(res, wo)) then
      break;

    if (getColor(self.x2 - 25, self.y2 - 308) = __COLOR_SCROLL_BAR) then
      down := true;

    if (getColor(self.x2 - 25, self.y2 - 79) = __COLOR_SCROLL_BAR) then
      down := false;

    mouseScroll(p, 4 + random(3), down);
    wait(700 + random(250));

  until(getSystemTime() > t);

  Wait(Random(200, 300));
  Result := self._findWorldNumber(res, wo);
end;

(*
TRSLobbyWorlds.selectWorld
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds.selectWorld(wo: integer): boolean;

Selects the world 'wo'.  Will open the worlds interface and scroll if needed.
Does NOT log the player in.  Will just click the world on the list.

.. note::

    - by Narcle, ZephyrsFury, Ashaman88, and Coh3n
    - Last Updated: 26 June 2013 by Coh3n

Example:

.. code-block:: pascal

    lobbyWorlds.selectWorld(115);
*)
function TRSLobbyWorlds.selectWorld(wo: integer): boolean;
var
  p: TPoint;
begin
  result := false;

  // make sure the worlds screen is open
  if (not self.isOpen()) then
    if (not self.open()) then
      exit(false);

  // make sure the world is valid
  if (not self._isWorldValid(wo)) then
    exit(false);

  print('TRSLobbyWorlds.selectWorld()', TDebug.HEADER);

  // check to see if we're already on the right world
  if (self.getCurrentWorld() = wo) then
  begin
    print('Already on world '+toStr(wo));
    result := true;
  end;

  if (not result) then
  begin
    p := [-1, -1];
    if (self._findWorldNumber(p, wo)) then // check to see if the worlds already visible (or if it's favorited)
      print('Found world '+toStr(wo))
    else
      if (self._scrollToWorld(p, wo)) then
        print('Scrolled to and found world '+toStr(wo));

    if (not p.isInvalid()) then
    begin
      print('Selected world '+toStr(wo));
      mouse(p.rand(-6, 6), MOUSE_LEFT);
      result := true;
    end;
  end;

  print('TRSLobbyWorlds.selectWorld(): '+toStr(result), TDebug.FOOTER);
end;

(*
TRSLobbyWorlds.selectRandomWorld
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSLobbyWorlds.selectRandomWorld(members: boolean): boolean;

Selects a random world. P2P or F2P depends on the value of 'members'.

.. note::

    - by Narcle, Mixter, and Coh3n
    - Last Updated: 26 June 2013 by Coh3n

Example:

.. code-block:: pascal

    lobbyWorlds.selectRandomWorld(players[currentPlayer].isMember);
*)
function TRSLobbyWorlds.selectRandomWorld(members: boolean): boolean;
var
  i, l, wo: integer;
  wArray: TIntegerArray;
begin
  setLength(wArray, length(self.worlds));

  for i := 0 to high(self.worlds) do
    if (not self.worlds[i].members = not members) then // the not's are required; don't even ask me why
    begin
      wArray[l] := self.worlds[i].world;
      inc(l);
    end;

  if (l <= 0) then
  begin
    print('TRSLobbyWorlds.selectRandomWorld(): Failed to initiate wArray', TDebug.ERROR);
    exit();
  end;

  setLength(wArray, l);
  wo := random(l);

  print('TRSLobbyWorlds.selectRandomWorld(): Random world is '+toStr(wArray[wo]), TDebug.SUB);

  result := self.selectWorld(wArray[wo]);
end;

begin
  lobbyWorlds.__init();
end;

{$f+}
