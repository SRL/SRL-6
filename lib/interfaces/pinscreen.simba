(*
Pin Screen
==========

The pinscreen file holds functions and procedures that are used in the runescape pinscreen.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/pinscreen.simba>`_.

*)

{$f-}

(*
Consts, Types, Vars
~~~~~~~~~~~~~~~~~~~

The following constants, types and variables are used throughout the pinScreen methods.

**type TRSPinScreen**

.. code-block:: pascal

    type
      TRSPinScreen = type TRSInterface;

A type that stores the pinScreen interface properties.

*)
type
  TRSPinScreen = type TRSInterface;

(*
**var pinScreen**

.. code-block:: pascal

    var
      pinScreen: TRSPinScreen;

A variable through which scripters can access the TRSPinScreen type methods.

*)
var
  pinScreen: TRSPinScreen;

(*
TRSPinScreen methods
~~~~~~~~~~~~~~~~~~~~

The following methods should be called through the **pinScreen** variable.

Example:

.. code-block:: pascal

    if inScreen.isOpen() then
      writeln('Pin screen is open!');
*)

{*
__init
------

.. code-block:: pascal

    procedure TRSPinScreen.__init();

Initializes the TRSPinScreen.

.. note::

    - by Olly
    - Last Updated: 22 September 2013 by Olly

Example:

.. code-block:: pascal

    pinScreen.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSPinScreen.__init();
begin
  with (self) do
  begin
    name := 'RS Pin Screen';
    ID := ID_INTERFACE_PINSCREEN;
    parentID := -1;
    isStatic := false;
  end;
end;
{$ENDIF}

{*
__find
------

.. code-block:: pascal

    function TRSPinScreen.__find(): boolean;

Returns true if the pinScreen interface is detected and its bounds are set.
Scripters should use pinScreen.isOpen() below.

.. note::

    - by Olly
    - Last Updated: 17 July 2014 by The Mayor

Example:

.. code-block:: pascal

    if pinScreen.__find() then
      writeln('The pin screen is open, and the bounds are set!');
*}
{$IFNDEF CODEINSIGHT}
function TRSPinScreen.__find(): boolean;
const
  TEXT_COLOR = 13417886;
  TEXT_TOL = 32;
  TOP_BUTTON_COLOR = 9998984;
  BOTTOM_BUTTON_COLOR = 4932919;
  BUTTON_LENGTH = 156;
var
  tpa: TPointArray;
  atpa: T2DPointArray;
  i, hh: integer;
  b: TBox;
  p: TPoint;
begin
  result := false;

  if (not findColors(tpa, TOP_BUTTON_COLOR, getClientBounds())) then
    exit();

  atpa := clusterTPAEx(tpa, 1, 20);
  hh := high(atpa);

  for i := 0 to hh do
    if (length(atpa[i]) = BUTTON_LENGTH) then
    begin
      b := getTPABounds(atpa[i]);
      if (((b.x2 - b.x1) + 1) = (BUTTON_LENGTH)) then
      begin
        incEx(b.y2, 24);

        if (getColor(b.x1, b.y2) = BOTTOM_BUTTON_COLOR) and (getColor(b.x2, b.y2) = BOTTOM_BUTTON_COLOR) then
          if (countColorTolerance(TEXT_COLOR, b, TEXT_TOL) > 100) then
          begin
            self.setBounds([b.x1 - 329, b.y1 - 252, b.x2 + 28, b.y2 + 57]);
            exit(true);
          end;
      end;
    end;
end;
{$ENDIF}

(*
isOpen
------

.. code-block:: pascal

    function TRSPinScreen.isOpen(waitTime: integer = 0): boolean;

Returns true if the pinScreen interface is open. The optional **waitTime** parameter
*(default = 0)* is the maximum time (in milliseconds) it will keep looking.

.. note::

    - by Olly
    - Last Updated: 17 July 2014 by The Mayor

Example:

.. code-block:: pascal

   if pinScreen.isOpen(1000) then
      writeln('Pinscreen is open!');
*)
function TRSPinScreen.isOpen(waitTime: integer = 0): boolean;
var
  t: LongWord;
  p: TPoint;
begin
  t := (getSystemTime() + waitTime);

  repeat
    result := self.__find()

    if (result) then
      break();

    if (waitTime > 0) then
      wait(20 + random(20));

  until (getSystemTime() >= t);
end;

(*
close
-----

.. code-block:: pascal

    function TRSPinScreen.close(): boolean;

Returns true if the pinScreen is successfully closed.

.. note::

    - by Olly
    - Last Updated: 22 September 2013 by Olly

Example:

.. code-block:: pascal

   if pinScreen.close() then
     writeln('The pinScreen has been closed');
*)
function TRSPinScreen.close(): boolean;
begin
  result := false;

  if (self.isOpen()) then
    result := mouseText(['Exit'], [UpChars], self.getBounds(), MOUSE_LEFT);

  print('pinScreen.close(): result = ' + boolToStr(result));
end;

(*
waitNotOpen
-----------

.. code-block:: pascal

    function TRSPinScreen.waitNotOpen(waitTime: integer): boolean;

Returns true if the pinScreen is no longer open within **waitTime**

.. note::

    - by Olly
    - Last Updated: 22 September 2013 by Olly

Example:

.. code-block:: pascal

   if pinScreen.waitNotOpen(5000) then
     writeln('The pinScreen is no longer open');
*)
function TRSPinScreen.waitNotOpen(waitTime: integer): boolean;
var
  t: LongWord;
begin
  t := (getSystemTime() + waitTime);
  result := (not self.isOpen());

  if (result) then
    exit(true);

  while (t > getSystemTime()) and (not result) do
  begin
    result := (not self.isOpen());
    wait(20 + random(30));
  end;
end;

{*
__exit
------

.. code-block:: pascal

    function TRSPinScreen.__exit(reason: string; debugType: TDebug; res: boolean): boolean;

Helper function for TRSPinScreen.enter. It is just used to keep it tidy.

.. note::

    - by Olly
    - Last Updated: 22 September 2013 by Olly

Example:

.. code-block:: pascal

    pinScreen.__exit('oops', TDebug.FATAL, false);
*}
{$IFNDEF CODEINSIGHT}
function TRSPinScreen.__exit(reason: string; debugType: TDebug; res: boolean): boolean;
begin
  print(reason, debugType);
  print('pinScreen.enter(): result = ' + toStr(res), TDebug.FOOTER);
  exit(res);
end;
{$ENDIF}

{*
__findNumber
------------

.. code-block:: pascal

    function TRSPinScreen.__findNumber(number: char; out b: TBox): boolean;

Returns true if it finds the pinScreen button numbered **number** . If found,
it will pass the button bounds as the TBox **b** .

.. note::

    - by Olly
    - Last Updated: 22 September 2013 by Olly

Example:

.. code-block:: pascal

    pinScreen.__findNumber('1', b);
*}
{$IFNDEF CODEINSIGHT}
function TRSPinScreen.__findNumber(number: char; out b: TBox): boolean;
var
  numberSlots: TBoxArray;
  area: TBox;
  i: integer;
  p: TPoint;
begin
  result := false;

  if (not self.isOpen()) then
  begin
    print('pinScreen.findNumber(): Unable to find the number because the pinscreen isn''t open', TDebug.ERROR);
    exit();
  end;

  numberSlots := grid(4, 3, 57, 57, 90,72, point(self.x + 64, self.y + 135));
  area := [self.x + 30, self.y + 100, self.x + 370, self.y + self.h - 20];

  // delete the two extra boxes created by grid().
  numberSlots.deleteIndex(7);
  numberSlots.deleteIndex(10);

  if (findText(p, [toStr(number)], [UpCharsEx], area)) then
    for i := 0 to high(numberSlots) do
      if (pointInBox(p, numberSlots[i])) then
      begin
        b := numberSlots[i];
        exit(true);
      end;

  // if we dont find the text in any of the boxes, our mouse must be covering it.
  getMousePos(p.x, p.y);

  for i := 0 to high(numberSlots) do
    if (pointInBox(p, numberSlots[i])) then
    begin
      b := numberSlots[i];
      exit(true);
    end;
end;
{$ENDIF}

(*
isPinVaild
----------

.. code-block:: pascal

    function TRSPinScreen.isPinVaild(pin: string): boolean;

Returns true if the pin **pin** is a valid 4 digit number.

.. note::

    - by Olly
    - Last Updated: 13 October 2013 by Olly

Example:

.. code-block:: pascal

   if pinScreen.isPinVaild('1234') then
      writeln('1234 is a vaild pin!');
*)
function TRSPinScreen.isPinVaild(pin: string): boolean;
begin
  result := (length(extractFromStr(pin, numbers)) = 4);

  if (not result) then
    print('The player''s in isn''t vaild!', TDebug.ERROR);
end;

(*
enter
-----

.. code-block:: pascal

    function TRSPinScreen.enter(pin: string): boolean;

Returns true if it successfully enters the bankpin **pin** . It will attempt up
to 2 times.

.. note::

    - by Olly
    - Last Updated: 22 September 2013 by Olly

Example:

.. code-block:: pascal

    if bankScreen.open(BANK_TABLE_BURTHORPE) then
    begin
      if pinScreen.isOpen() then
        if pinScreen.enter(players[currentPlayer].bankPin) then
          writeLn('Entered you''re bank pin!');

      // Other banking code
    end;
*)
function TRSPinScreen.enter(pin: string): boolean;
var
  i, tries: integer;
  b: TBox;
begin
  result := false;
  print('pinScreen.enter()', TDebug.HEADER);

  if (not self.isPinVaild(pin)) then
  begin
    print('Cannot enter pin because the pin isnt vaild!', TDebug.ERROR);
    print('pinScreen.enter(): result = false', TDebug.FOOTER);
    exit();
  end;

  if (not self.isOpen()) then
  begin
    print('Cannot enter pin because the pinscreen is not open', TDebug.ERROR);
    print('pinScreen.enter(): result = false', TDebug.FOOTER);
    exit();
  end;

  repeat
    inc(tries);

    for i := 1 to 4 do
    begin
      if (self.isOpen()) then
      begin
        if (self.__findNumber(pin[i], b)) then
        begin
          print('Succesfully clicked number ' + pin[i]);
          mouseBox(b, MOUSE_LEFT);

          wait(350 + random(400));
        end else
          exit(self.__exit('Failed to find number ' + pin[i], TDebug.ERROR, false));
      end else
        exit(self.__exit('Pinscreen isn''t open anymore', TDebug.ERROR, false));
    end;

    // now we've entered
    print('Waiting for the outcome of the pin...');
    wait(250 + random(200));

    // wait upto 4 seconds for the pinscreen not to be open
    if (self.waitNotOpen(4000)) then
    begin
      if (not conversationBox.isOpen()) then  // no convo box? = entered pin succesfully
        exit(self.__exit('Succesfully entered pin', TDebug.DEBUG, true));

      if (not conversationBox.findChat(['Please try again', 'ease try aga'])) then // didnt find bad
         exit(self.__exit('Conversation box is open, but didn''t find the text to retry.', TDebug.ERROR, false))
      else
        conversationBox.continue(true, true); // if we did found the text, lets skip it.
    end else
      exit(self.__exit('Pinscreen is still open, something went wrong', TDebug.ERROR, false)); // else pinscreen is still open, something messed up

    print('Going to try and enter our pin again..');
  until (tries >= 2);

  exit(self.__exit('Failed to enter our pin after two tries', TDebug.ERROR, false));
end;

begin
  pinScreen.__init();
end;

{$f+}
