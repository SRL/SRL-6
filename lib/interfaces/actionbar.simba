(*
Actionbar
=========

The actionbar file holds functions and procedures that are used in the
Runescape Action Bar.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/actionbar.simba>`_.

*)

{$include_once interfaces.simba}
{$include_once ../core/text.simba}
//{$include_once gametabs/abilitybook.simba}
{$include_once gametabs/backpack.simba}

{$f-}

(*
type TRSActionBar
~~~~~~~~~~~~~~~~~

A type that stores functions and properties of the Runescape Action Bar.
*)
type
  TRSActionBar = record(TRSInterface)

    __slots: TBoxArray;
  end;

(*
var actionBar
~~~~~~~~~~~~~

Variable that stores functions and properties of the Runescape Action Bar.
*)
var
  actionBar: TRSActionBar;

const
  ACTION_BAR_SLOT_LOW = 1;
  ACTION_BAR_SLOT_HIGH = 12;

function TRSActionBar._findMinimizeButton(out center: TPoint): boolean;
const

  TOP_HALF_OF_MINIMIZE_BUTTON_LINE_SYMBOL_COLOR = 10394257;
var

  hh, ww: integer;
  tpa: TPointArray;
begin

  getClientDimensions(ww, hh);

  if (not findColors(tpa, TOP_HALF_OF_MINIMIZE_BUTTON_LINE_SYMBOL_COLOR, 0, 0,
   ww - 1, hh - 1)) then
    exit(false);

  if (length(tpa) <> 9) then
  begin

    center := point(0, 0);

    print('TRSActionBar._findMinimizeButton: Failed to find the button, the ' +
    'length of the color search''s tpa was ' + toStr(length(self.__slots)) +
     '.', TDebug.ERROR);
    exit(false);
  end;

  center := tpa.getMiddle();

  result := true;
end;

function TRSActionBar.__find(): boolean;
const

  X1_OFFSET = - 566;
  Y1_OFFSET = - 10;
  X2_OFFSET = 9;
  Y2_OFFSET = 65;
var

  center: TPoint;
begin

  if (not self._findMinimizeButton(center)) then
    exit(false);

  self.x := center.x + X1_OFFSET;
  self.y := center.y + Y1_OFFSET;
  self.w := center.x + X2_OFFSET - self.x;
  self.h := center.y + Y2_OFFSET - self.y;

  self.__slots := grid(14, 1, 29, 29, 36, 0, point(self.getBounds().x1 + 67,
   self.getBounds().y1 + 53));

  self.__slots[high(self.__slots) - 1] := intToBox(self.__slots[high(self.__slots) - 2].x1 + 54,
   self.getBounds().y1 + 39, self.__slots[high(self.__slots) - 2].x1 + 83, self.getBounds().y1 + 68);

  self.__slots[high(self.__slots)] := self.__slots[high(self.__slots) - 1].copy();
  self.__slots[high(self.__slots)].offset(point(36, 0));

  result := true;
end;

{*
TRSActionBar.__init
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSActionBar.__init();

Initiates the actionBar variable. Called at the end of this file.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    actionBar.__init();
*}
procedure TRSActionBar.__init();
begin

  with (self) do
  begin

    name := 'RS Action Bar';

    ID := ID_INTERFACE_ACTION_BAR;
    parentID := ID_INTERFACE_MAINSCREEN;

    static := true;

    x := 0;
    y := 407;
    w := 575;
    h := 75;

    __slots := Grid(14, 1, 29, 29, 36, 0, Point(x + 61, y + 49));

    self.__slots[high(self.__slots) - 1] := intToBox(self.__slots[high(self.__slots) - 2].x1 + 54,
     self.getBounds().y1 + 39, self.__slots[high(self.__slots) - 2].x1 + 83, self.getBounds().y1 + 68);

    self.__slots[high(self.__slots)] := self.__slots[high(self.__slots) - 1].copy();
    self.__slots[high(self.__slots)].offset(point(36, 0));
  end;
end;

function TRSActionBar.__isSlotValid(var slot: integer): boolean;
begin

  if (inRange(slot, ACTION_BAR_SLOT_LOW, ACTION_BAR_SLOT_HIGH)) then
    exit(true);

  print('Specified Action Bar slot not in the range of 1 - ' + toStr(length(self.__slots)) + '.', TDebug.ERROR);

  slot := 1;
  result := false;
end;

function TRSActionBar.__printWarning(methodName, resultValue: variant): variant;
begin

  print(methodName + ' will now exit, returning ' + toStr(resultValue) + '.', TDebug.WARNING);
  exit(resultValue);
end;

(*
TRSActionBar.isOpen
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isOpen(): boolean;

Returns true if the Action Bar is open.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isOpen()) then
      writeln('Action Bar open and ready to use!');
*)
function TRSActionBar.isOpen(): boolean;
var

  color: integer;
begin

  color := getColor(self.getBounds().x2 - 1, self.__slots[0].y1 - 2);
  result := (not (color = 4866877));

  print('actionBar.isOpen() returned ' + toStr(result) + ' and found the color ' +
   toStr(color) + '. We were looking for the silver border of the Action Bar, if it was open.', TDebug.LOG);
end;

{*
TRSActionBar.__toggleSelf
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.__toggleSelf(open: boolean): boolean;

Internal function used to toggle the Action Bar open and closed.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.__toggleSelf(true)) then
      writeln('Action Bar is open.');
*}
function TRSActionBar.__toggleSelf(open: boolean): boolean;
var

  center: TPoint;
  t: TTimeMarker;
begin

  if (((open) and (not self.isOpen())) or ((not open) and (self.isOpen()))) then //Lape currently does weird things with xor
  begin

    if (not self._findMinimizeButton(center)) then
      exit(false);

    intToBox(center.x - 6, center.y - 6, center.x + 6, center.y + 6).mouse(MOUSE_LEFT);

    t.start();
    repeat

      wait(randomRange(10, 30));
      result := (open = self.isOpen());
    until ((result) or (t.getTime() > 950 + random(100)));
  end else
    result := true;
end;

(*
TRSActionBar.open
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.open(): boolean;

Opens the Action Bar if it is closed.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.open()) then
      writeln('Successfully opened the Action Bar.');
*)
function TRSActionBar.open(): boolean;
begin

  result := self.__toggleSelf(true);
end;

(*
TRSActionBar.close
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.close(): boolean;

Closes the Action Bar if it is open.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.close()) then
      writeln('Successfully closed the Action Bar.');
*)
function TRSActionBar.close(): boolean;
begin

  result := self.__toggleSelf(false);
end;

(*
TRSActionBar.getCurrentBar
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getCurrentBar(): Integer;

Returns the number of the Action Bar setup currently displayed.  (Members can
 have up to five different Action Bar setups.')

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if ((actionBar.getCurrentBar()) = 1) then
      writeln('The first Action Bar setup is currently displayed.');
*)
function TRSActionBar.getCurrentBar(): Integer;
begin

  result := strToIntDef(getTextAtEx(intToBox(self.getBounds().x1 + 25,
   self.getBounds().y1 + 49, self.getBounds().x1 + 35, self.getBounds().y1 + 59),
    0, 0, 0, 3111603, 0, 'UpChars'), -1); //Color is of the number showing which bar is active.
  print('actionBar.getCurrentBar() returned ' + toStr(result), TDebug.LOG);
end;



function TRSActionBar.switchToBar(barNumber: integer; useBindKey: boolean = false): boolean; //Waiting on the chat interface to be finished.  As such, this is not currently a working function.  By riwu.
var

  currentBar, r, i, diff: integer;
  timeMarker: TTimeMarker;
  keys: tIntegerArray;
begin

  result := false;

  if (length(players) > 0) then
    if (not players[currentPlayer].isMember) then
    begin

      print('actionBar.switchToBar: F2P cannot switch to this bar.', TDebug.ERROR);
      exit;
    end;

  if (not inRange(barNumber, 1, 5)) then
  begin

    print('actionBar.switchToBar: barNumber must be within 1-5.', TDebug.ERROR);
    exit;
  end;

  currentBar:= self.getCurrentBar();

  if (barNumber = currentBar) then
    exit(true);

  if (useBindKey) then
  begin

    keys:= [VK_LSHIFT, VK_0 + barNumber];

    for i := 0 to 1 do
    begin

      keyDown(keys[i]);
      wait(randomRange(10, 200 - i * 100));
    end;

    r:= random(2);
    keyUp(keys[r]);

    wait(random(60));

    keyUp(keys[abs(r - 1)]);

  end else
  begin

    diff := abs(currentBar - barNumber);

    if (inRange(diff, 2, 3)) then
    begin

      intToBox(self.getBounds().x1 + 25, self.getBounds().y1 + 49,
       self.getBounds().x1 + 35, self.getBounds().y1 + 59).mouse(MOUSE_RIGHT);
      chooseOption.select([intToStr(barNumber)], 618);
    end else
    begin

      if ((currentBar < barNumber) xor (diff > 2)) then
        intToBox(self.getBounds().x1 + 39, self.getBounds().y1 + 50,
         self.getBounds().x1 + 43, self.getBounds().y1 + 57).mouse(MOUSE_LEFT)
      else
        intToBox(self.getBounds().x1 + 16, self.getBounds().y1 + 50,
         self.getBounds().x1 + 20, self.getBounds().y1 + 57).mouse(MOUSE_LEFT);
    end;
  end;

  timeMarker.start();

  while (timeMarker.getTime() < randomRange(3000, 4000)) do
  begin

    result := (barNumber = self.getCurrentBar());

    if (result) then
      exit;
  end;
end;

(*
TRSActionBar.isSlotEmpty
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isSlotEmpty(slot: integer): boolean;

Returns true if the specified Action Bar slot is empty.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isSlotEmpty(1)) then
      writeln('The first Action Bar slot is empty.');
*)
function TRSActionBar.isSlotEmpty(slot: integer): boolean;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.isSlotEmpty()', false));

  result := (getColor(self.__slots[slot - 1].getMiddle().x,
   self.__slots[slot - 1].getMiddle().y) = 60); //Color is of the dark red X present in the center of an empty slot.
end;

(*
TRSActionBar.isEmpty
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isEmpty(): boolean;

Returns true if every slot in the Action Bar is empty.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isEmpty()) then
      writeln('Every slot in the Action Bar is empty!');
*)
function TRSActionBar.isEmpty(): boolean;
var

  i: integer;
begin

  result := false;

  for i := ACTION_BAR_SLOT_LOW to ACTION_BAR_SLOT_HIGH do
    if (not self.isSlotEmpty(i)) then
      exit;

  result:= true;
end;

(*
TRSActionBar.clickSlot
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.clickSlot(slot: integer): boolean;

Generic function to click a non-empty slot in the Action Bar.  Returns true
 if the slot is non-empty, false if otherwise.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.clickSlot(1)) then
      writeln('There was something in slot 1 and we clicked it!');
*)
function TRSActionBar.clickSlot(slot: integer): boolean;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.clickSlot()', false));

  if (self.isSlotEmpty(slot)) then
    exit(false);

  self.__slots[slot - 1].mouse(MOUSE_LEFT);

  result := true;
end;

(*
TRSActionBar.getKeyBind
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getKeyBind(slot: integer): string;

Returns string representation of the key bind for the given slot.  Striking
 the key on the keyboard causes the slot to be activated.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    slotOneKeyBind := actionBar.getKeyBind(1);

    writeln('The key bind for slot 1 is: ', slotOneKeyBind);
*)
function TRSActionBar.getKeyBind(slot: integer): char;
var

  tempResult: string;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.getKeyBind()', ' '));

  if (not self.open()) then
    exit(self.__printWarning('actionBar.getKeyBind()', ' '));

  tempResult := getTextAtEx(intToBox(self.__slots[slot - 1].x1 + 2,
   self.__slots[slot - 1].y1 + 18, self.__slots[slot - 1].x1 + 8,
    self.__slots[slot - 1].y1 + 25), 0, 0, 0, 16777215, 0, 'UpChars'); //Color is key bind character in bottom-left of slot.

  if (tempResult = '__') then //Simba's OCR detects an equals sign as two underscores.
    tempResult := '=';

  print('actionBar.getKeyBind() checked slot ' + toStr(slot) +
   ' and found the key bind to be ' + tempResult, TDebug.LOG);
  result := tempResult[1];
end;

(*
TRSActionBar.isLocked
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.isLocked(): boolean;

Returns true if the Action Bar is locked.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.isLocked()) then
      writeln('The Action Bar is locked.');
*)
function TRSActionBar.isLocked(): boolean;
const

  SPECIFIC_BLACK_COLOR = 1906964; //Specific point in the space between the shackle/shank of the lock and the lock's body.
var

  color: integer;
begin

  color := getColor(self.getBounds().x1 + 494, self.getBounds().y1 + 63);

  print('actionBar.isLocked() grabbed the color ' + toStr(color) +
   ' and we were looking at a point in the space between where the' +
    ' shackle/shank meets the body of the lock symbol', TDebug.LOG);
  result := (not (color = SPECIFIC_BLACK_COLOR));
end;

{*
TRSActionBar.__toggleLock
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.__toggleLock(lock: boolean): boolean;

Internal function to toggle the lock of the Action Bar.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.__toggleLock(true)) then
      writeln('Successfully locked the Action Bar.');
*}
function TRSActionBar.__toggleLock(lock: boolean): boolean;
var

  timeMarker: TTimeMarker;
begin

  if (((lock) and (not self.isLocked())) or ((not lock) and (self.isLocked()))) then //Lape currently does weird things with xor
  begin

    intToBox(self.getBounds().x1 + 486, self.getBounds().y1 + 62,
     self.getBounds().x1 + 492, self.getBounds().y1 + 70).mouse(MOUSE_LEFT);

    timeMarker.start();

    repeat

      wait(randomRange(10, 30));
      result := (lock = self.isLocked());
    until (result or (timeMarker.getTime() > randomRange(1900, 2300)));
  end else
    result := true;
end;

(*
TRSActionBar.lock
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.lock(): boolean;

Locks the Action Bar if it is unlocked.  Returns true on success.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.lock()) then
      writeln('Action Bar is now, or already was, locked.');
*)
function TRSActionBar.lock(): boolean;
begin

  result := self.__toggleLock(true);
end;

(*
TRSActionBar.unlock
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.unlock(): boolean;

Unlocks the Action Bar if it is locked.  Returns true on success.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.unlock()) then
      writeln('Action Bar is now, or alreay was, unlocked.');
*)
function TRSActionBar.unlock(): boolean;
begin

  result := self.__toggleLock(false);
end;

(*
TRSActionBar.clearSlot
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.clearSlot(slot: integer): boolean;

Clears the specified Action Bar slot.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.clearSlot(1)) then
      writeln('Successfully cleared slot 1 of the Action Bar.');
*)
function TRSActionBar.clearSlot(slot: integer): boolean;
var

  sloTBox: TBox;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.clearSlot()', false));

  if (self.isSlotEmpty(slot)) then
    exit(true);

  self.unlock();

  wait(randomRange(314, 504));

  mouse(point(self.__slots[slot - 1].x1, self.__slots[slot - 1].y1).rand(29, 27), MOUSE_MOVE);
  wait(random(200));
  dragMouse(intToBox(self.getBounds().x1 + 486, self.getBounds().y1 + 41, self.getBounds().x1 + 492, self.getBounds().y1 + 51).getRandomPoint());

  wait(randomRange(100, 300));

  result := self.isSlotEmpty(slot);
end;

(*
TRSActionBar.clear
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.clear(): boolean;

Clears every slot of the Action Bar.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.clear()) then
      writeln('Successfully cleared the Action Bar.');
*)
(*
function TRSActionBar.clear(): boolean;
var

  timeMarker: integer;
begin

  result := false;
  if (self.isEmpty()) then
    exit(true);

  intToBox(10, 360, 34, 383).mouse(MOUSE_RIGHT);

  timeMarker := getSystemTime() + randomRange(1504, 2306);

  while (getSystemTime() < timeMarker) do
    if (chooseOption(['Clear', 'all', 'r-a', 'ear', 'ar'])) then
    begin

      result := true;
      break;
    end;

  if (not result) then
    exit(false);

  timeMarker:= getSystemTime() + randomRange(1507, 2030);

  repeat

    result := self.isEmpty();
  until (result or (getSystemTime() > TimeMarker));
end;
*)
(*
TRSActionBar.getAbilityCooldown
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSActionBar.getAbilityCooldown(slot: integer): integer;

Returns integer representation (0 - 100) of the cooldown of the ability
 in the specified slot.

.. note::

    - by euphemism
    - Last Updated: 18 April 2013 by euphemism

Example:

.. code-block:: pascal

    if (actionBar.getAbilityCooldown(1) = 100) then
      writeln('The ability in slot 1 is at 100% and ready to use.');
*)
function TRSActionBar.getAbilityCooldown(slot: integer): integer;
begin

  if (not (self.__isSlotValid(slot))) then
    exit(self.__printWarning('actionBar.getAbilityCooldown()', -1));

  if (self.isSlotEmpty(slot)) then
    exit(-1);

  result := powers.__getAbilityCooldown(self.__slots[slot - 1], true);

  print('actionBar.getAbilityCooldown() checked slot ' + toStr(slot) + 'and got ' + toStr(result), TDebug.LOG);
end;

{$IFNDEF CODEINSIGHT}
function __findActionBar(): boolean;
begin

  result := actionBar.__find();
end;
{$ENDIF}

{$f+} // needed so actionBar.__find isn't called when assigned

begin

  actionBar.__init();

  __interfaceFindFunctions[actionBar.ID] := @__findActionBar;
end;
