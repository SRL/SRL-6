(*
Smart
=====

The Smart file stores all the functions and procedures used to initiate SMART
in scripts.  To use SMART in a script, simply add {$DEFINE SMART} before SRL is
included.

*)

{$f-}

{$loadlib libsmartremote}
{$include_once ../utilities/drawing.simba}
{$include_once ../core/debug.simba}
{$include_once ../core/players.simba}
{$include_once ../core/client.simba}

(*
const Client W/H
~~~~~~~~~~~~~~~~

Integer constants that represent the width and height of the client (fixed) needs
to function correctly.

*)
const
  SMART_CLIENT_W = 960;
  SMART_CLIENT_H = 640;

(*
const URL
~~~~~~~~~

The Runescape web address for SMART to load.
*)
const
  SMART_URL = 'http://www.runescape.com/game.ws?j=1';

(*
var User Set
~~~~~~~~~~~~

Variables that can be used in scripts.
    * smartForceNewClient: Opens a new SMART client every time a scrpit is run.
    * smartEnableDrawing: Enables drawing onto the SMART window.
    * smartImage: A TMufasaBitmap to be drawn onto that will display on the smart canvas.
*)
var
  smartForceNewClient = false;
  smartEnableDrawing = true;
  smartImage: TMufasaBitmap;

{*
var Internal
~~~~~~~~~~~~

Internal SMART variables used only in smart.simba.
    * __smartCurrentClient: keeps track of the current SMART client.
    * __smartIsDrawingSetup: keeps track if smart drawing is setup or not.
*}
var
  __smartCurrentClient: integer;
  __smartIsDrawingSetup: boolean;

(*
checkOGLPlugin
~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure checkOGLPlugin();

Checks we have the reqiured plugin to read OpenGL colors from SMART.

.. note::

  By: Olly
  Last Updated: July 24, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure checkOGLPlugin();
begin
  if (not fileExists(PluginPath + 'OpenGL32.dll')) then
    print('Could not find the OpenGL32.dll plugin', TDebug.FATAL)
  else
    print('Found OpenGL plugin');
end;

(*
smartSetDebug; override
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartSetDebug(enable: boolean); override;

Overrides smartSetDebug to enable/disable drawing in openGL mode.

.. note::

  By: Olly
  Last Updated: July 24, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartSetDebug(enable: boolean); override;
begin
  // small bug where the boolean is actually flipped.
  smartSetNativeButton(0, 101, not enable);
end;

(*
smartSetupDrawing
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartSetupDrawing();

Set ups SMART so its ready to be drawn on-to.

.. note::

  By: Olly
  Last Updated: July 24, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartSetupDrawing();
begin
  smartSetDebug(true);
  __smartIsDrawingSetup := true;

  try
    smartImage.init();
    smartImage.setName('SMART Debug Image');
    smartImage.setPersistentMemory(SmartDebugArray(), SMART_CLIENT_W, SMART_CLIENT_H);
    smartImage.drawClear(0);
    print('Setup SMART drawing');
  except
    print('Unable to setup SMART drawing', TDebug.FATAL);
  end;

  addOnTerminate('smartFreeDrawing');
end;

(*
smartFreeDrawing
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartFreeDrawing();

Free's and destorys the smart image.

.. note::

  By: Olly
  Last Updated: July 24, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartFreeDrawing();
begin
  if (not __smartIsDrawingSetup) then
    exit();

  try
    smartImage.resetPersistentMemory();
    smartImage.free();
  except end;

  __smartIsDrawingSetup := false;
end;

(*
smartGetParameters
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartGetParameters(out params: array of string): boolean;

Attempts to grab the correct parameters for spawning a SMART client. Results if
succesfull or not.

.. note::

  By: Brandon, Mormanman, Benland100
  Last Updated: May. 26, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartGetParameters(out params: array of string): boolean;
var
  page: string;
begin
  page := getPage(SMART_URL);

  params := explode(',', between('<iframe id="game" src="', '"', page));
  result := (length(params) = 2);

  if (not result) then
  begin
    print('Cannot acess the RS website, make sure you can acces it currently', TDebug.HINT);
    print('Could not grab parameters needed to spawn a SMART client', TDebug.FATAL);
  end;

  print('smartGetParameters(): Succesfully grabbed paramters', TDebug.SUB);
end;

(*
smartGetClientIDs
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartGetClientIDs(only_unpaired: boolean = true): TIntegerArray;

Returns the id's of all spawned SMART clients, on default will return all unpaired
clients.

.. note::

  By: Mormanman
  Last Updated: May. 26, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartGetClientIDs(only_unpaired: boolean = true): TIntegerArray;
var
  i, count: Integer;
begin
  count := smartGetClients(only_unpaired);
  setLength(result, count);

  if (count > 0) then
    for i := 0 to (count - 1) do
      result[i] := SmartClientID(i);
end;

(*
smartKillClients
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartKillClients(only_unpaired: boolean);

Attempts to kill SMART clients based on the only_unpaired boolean.

.. note::

  By: Mormanman
  Last Updated: May. 26, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure smartKillClients(only_unpaired: boolean);
var
  ids: TIntegerArray;
  I: integer;
begin
  ids := smartGetClientIDs(only_unpaired);
  i := high(ids);

  for i downto 0 do
    if smartKillClient(ids[i]) then
      print('smartKillClients(): Succesfully killed client: ' + intToStr(ids[i]), TDebug.SUB)
    else
      print('smartKillClients(): Failed to kill client: ' + intToStr(ids[i]), TDebug.SUB);
end;

(*
smartSetAsClient
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartSetAsClient(id: integer): boolean;

Attempts to pair, and then set as Simba's target returns true if succesfull, if
succesfull will set our current current client as the ID.

.. note::

  By: Ollybest
  Last Updated: May. 26, 2013 by Olly

Example:

.. code-block:: pascal

*)
function smartSetAsClient(id: integer): boolean;
var
  id_string: string;
begin
  id_string := intToStr(id);
  result := false;

  print('smartSetAsClient():', TDebug.HEADER);
  print('Attempting to pair to SMART['+ id_string +']');

  if smartPairClient(id) then
  begin
    print('Succesfully paired, attempting to set target');

    try
      setEIOSTarget('libsmartremote', id_string);
      print('Set SMART['+ id_string +'] as Simba''s target');
      __smartcurrentClient := id;
      result := true;
    except
      print('Failed to set SMART['+ id_string +'] as Simba''s target');
    end;
  end else
    print('Failed to pair to SMART['+ id_string +']');

  print('smartSetAsClient(): result = '+ toStr(result), TDebug.FOOTER);
end;

(*
pairToExistingClient
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function pairToExistingClient(skip: boolean): boolean;

Attempts to spawn to a free already spawned client, will return true if done so.
If skip is set to true it will exit the function without trying.

.. note::

  By: Ollybest
  Last Updated: June 1, 2013 by Olly

Example:

.. code-block:: pascal

*)
function pairToExistingClient(skip: boolean): boolean;
var
  ids: TIntegerArray;
  i: integer;
begin
  result := false;

  if (skip) then
    exit();

  print('pairToExistingClient():', TDebug.HEADER);

  ids := smartGetClientIds(true);

  if (length(ids) > 0) then
  begin
    for i := 0 to high(ids) do
    begin
      print('Found free existing SMART['+ intToStr(ids[i]) +']');

      result := smartSetAsClient(ids[i]);

      if (result) then
        break();
    end;
  end else
    print('No free clients to pair to');

  if (result) then
    print('Succesfully paired to a existing client, SMART['+ intToStr(ids[i]) +']');

  print('pairToExistingClient(): result = '+ toStr(result), TDebug.FOOTER);
end;

(*
initSmart
~~~~~~~~~

.. code-block:: pascal

     procedure initSmart();

Initializes us to a SMART client, will attempt to pair to a existing client, if
that fails we will attempt to spawn a client, will terminate the script if anything
goes wrong.

.. note::

  By: Benland100, Mormanman, Brandon
  Last Updated: July 24, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure initSmart(force: boolean);
var
  id: integer;
  params: TStringArray;
begin
  print('initSmart():', TDebug.HEADER);
  checkOGLPlugin();

  // if we dont pair to a existing client lets spawn a new one.
  if (not pairToExistingClient(force)) then
  begin
    print('Attempting to spawn a SMART client');

    if smartGetParameters(params) then
    begin
      print('Using Parameters: ' + toStr(params));

      id := smartSpawnClient(StringReplace(PluginPath, '\', '/', [rfReplaceAll]), Params[0], ',' + Params[1], SMART_CLIENT_W, SMART_CLIENT_H, '', '', '', 'OpenGL32.dll');
      wait(100);

      if (id <> 0) then
      begin
        if (not smartSetAsClient(id)) then
          print('Failed to set SMART['+ intToStr(id) +'] as Simba''s target.', TDebug.FATAL);
      end else
        print('Failed to spawn a SMART client.', TDebug.FATAL);
    end;
  end;

  print('initSmart()', TDebug.FOOTER);
end;

(*
reloadCurrentClient
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure reloadCurrentClient();

Attempts to reload our current SMART client.

.. note::

  By: Olly
  Last Updated: June 1, 2013 by Olly

Example:

.. code-block:: pascal

*)
procedure reloadCurrentClient();
var
  oldRefresh: integer;
  oldImage: TMufasaBitmap;
begin
  print('reloadCurrentClient():', TDebug.HEADER);

  oldRefresh := smartGetRefresh();

  if (smartEnableDrawing) then
  begin
    oldImage.init();
    oldImage := smartImage.copy();
    smartFreeDrawing();
  end;

  if (not smartKillClient(__smartCurrentClient)) then
    print('Failed to kill our current client', TDebug.FATAL);

  // lets force a client just to be safe.
  initSmart(true);

  print('Restoring refresh rate back to ' + intToStr(oldRefresh));
  smartSetRefresh(oldRefresh);

  if (length(players) < 1) then
    print('No players to login!', TDebug.FATAL);

  if (waitClientReady) then
    players[currentPlayer].login()
  else
    print('Succesfully spawned a client, but RS failed to load.', TDebug.FATAL);

  if (smartEnableDrawing) then
  begin
    print('Restoring smart debug image');

    smartSetupDrawing();
    oldImage.drawTransparent(0, 0, smartImage);
    oldImage.free();
  end;

  print('reloadCurrentClient()', TDebug.FOOTER);
end;

begin
  SRL_Events[EVENT_RS_UPDATE] := reloadCurrentClient;
end;

