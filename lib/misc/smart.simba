{$f-}

{$loadlib libsmartremote}
{$include_once ../utilities/drawing.simba}
{$include_once ../core/debug.simba}
{$include_once ../core/players.simba}
{$include_once ../core/client.simba}

(*
const Client W/H
~~~~~~~~~~~~~~~~

Integer constants that represent the width and height of the client (fixed) needs
to function correctly.

*)

const
  FIXED_CLIENT_W = 765;
  FIXED_CLIENT_H = 553;

var
  smartForceNewClient := false;
  smartEnableDrawing := true;

var
  __smartCurrentClient: integer;
  smartImage: TDrawing;

(*
smartSetupDrawing
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartSetupDrawing();

Set ups SMART so its ready to be drawn on-to.

.. note::

  By: Ollybest
  Last Updated: June 1, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
procedure smartSetupDrawing();
begin
  if (smartImage.isSetup) then
    exit();

  smartSetDebug(true);

  if (not smartImage.create('SMART Debug Image', FIXED_CLIENT_W, FIXED_CLIENT_H)) then
    print('Failed to create the bitmap for smart drawing', TDebug.FATAL);

  smartImage.bitmap.setPersistentMemory(SmartDebugArray(), FIXED_CLIENT_W, FIXED_CLIENT_H);
  smartImage.clear();

  addOnTerminate('smartFreeDrawing');
end;

(*
smartFreeDrawing
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartFreeDrawing();

Free's and destorys the smart image.

.. note::

  By: Ollybest
  Last Updated: June 1, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
procedure smartFreeDrawing();
begin
  if (not smartImage.isSetup) then
    exit();

  smartImage.bitmap.resetPersistentMemory();
  smartImage.destroy();
end;

(*
smartGetParameters
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartGetParameters(out params: array of string): boolean;

Attempts to grab the correct parameters for spawning a SMART client. Results if
succesfull or not.

.. note::

  By: Brandon, Mormanman, Benland100
  Last Updated: May. 26, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
function smartGetParameters(out p: array of string): boolean;
var
  page: string;
  b: boolean;
const
  URL = 'http://www.runescape.com/game.ws?j=1';
begin
  page := getPage(URL);

  p := explode(',', between('<iframe id="game" src="', '"', page));
  result := (length(p) = 2);

  if (not result) then
  begin
    print('Cannot acess the RS website, make sure you can acces it currently', TDebug.HINT);
    print('Could not grab parameters needed to spawn a SMART client', TDebug.FATAL);
  end;

  print('smartGetParameters(): Succesfully grabbed paramters', TDebug.SUB);
end;

(*
smartGetClientIDs
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function smartGetClientIDs(only_unpaired: boolean = true): TIntegerArray;

Returns the id's of all spawned SMART clients, on default will return all unpaired
clients.

.. note::

  By: Mormanman
  Last Updated: May. 26, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
function smartGetClientIDs(only_unpaired: boolean = true): TIntegerArray;
var
  i, count: Integer;
begin
  count := smartGetClients(only_unpaired);
  setLength(result, count);

  if (count > 0) then
    for i := 0 to (count - 1) do
      result[i] := SmartClientID(i);
end;

(*
smartKillClients
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartKillClients(only_unpaired: boolean);

Attempts to kill SMART clients based on the only_unpaired boolean.

.. note::

  By: Mormanman
  Last Updated: May. 26, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
procedure smartKillClients(only_unpaired: boolean);
var
  ids: TIntegerArray;
  I: integer;
begin
  ids := smartGetClientIDs(only_unpaired);
  i := high(ids);

  for i downto 0 do
    if smartKillClient(ids[i]) then
      print('smartKillClients(): Succesfully killed client: ' + intToStr(ids[i]), TDebug.SUB)
    else
      print('smartKillClients(): Failed to kill client: ' + intToStr(ids[i]), TDebug.SUB);
end;

(*
smartKillClients
~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure smartKillClients(only_unpaired: boolean);

Attempts to kill SMART clients based on the only_unpaired boolean.

.. note::

  By: Mormanman
  Last Updated: May. 26, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
function smartSetAsClient(id: integer): boolean;
var
  id_string: string;
begin
  id_string := intToStr(id);
  result := false;

  print('smartSetAsClient():', TDebug.HEADER);
  print('Attempting to pair to SMART['+ id_string +']');

  if smartPairClient(id) then
  begin
    print('Succesfully paired, attempting to set target');

    try
      setEIOSTarget('libsmartremote', id_string);
      print('Set SMART['+ id_string +'] as Simba''s target');
      __smartcurrentClient := id;
      result := true;
    except
      print('Failed to set SMART['+ id_string +'] as Simba''s target');
    end;
  end else
    print('Failed to pair to SMART['+ id_string +']');

  print('smartSetAsClient(): result = '+ toStr(result) +'.', TDebug.FOOTER);
end;

(*
pairToExistingClient
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     function pairToExistingClient(skip: boolean): boolean;

Attempts to spawn to a free already spawned client, will return true if done so.
If skip is set to true it will exit the function without trying.

.. note::

  By: Ollybest
  Last Updated: June 1, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
function pairToExistingClient(skip: boolean): boolean;
var
  ids: TIntegerArray;
  i: integer;
begin
  result := false;

  if (skip) then
    exit();

  print('pairToExistingClient():', TDebug.HEADER);

  ids := smartGetClientIds(true);

  if (length(ids) > 0) then
  begin
    for i := 0 to high(ids) do
    begin
      print('Found free existing SMART['+ intToStr(ids[i]) +']');

      result := smartSetAsClient(ids[i]);

      if (result) then
        break();
    end;
  end else
    print('No free clients to pair to');

  if (result) then
    print('Succesfully paired to a existing client, SMART['+ intToStr(ids[i]) +']');

  print('pairToExistingClient(): result = '+ toStr(result) +'.', TDebug.FOOTER);
end;

(*
initSmart
~~~~~~~~~

.. code-block:: pascal

     procedure initSmart();

Initializes us to a SMART client, will attempt to pair to a existing client, if
that fails we will attempt to spawn a client, will terminate the script if anything
goes wrong.

.. note::

  By: Benland100, Mormanman, Brandon
  Last Updated: June 1, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
procedure initSmart(force: boolean);
var
  id: integer;
  params: TStringArray;
begin
  print('initSmart():', TDebug.HEADER);

  // if we dont pair to a existing client lets spawn a new one.
  if (not pairToExistingClient(force)) then
  begin
    print('Attempting to spawn a SMART client');

    if smartGetParameters(params) then
    begin
      print('Using paramters ' + toStr(params));

      id := smartSpawnClient(StringReplace(PluginPath, '\', '/', [rfReplaceAll]), Params[0], ',' + Params[1], FIXED_CLIENT_W, FIXED_CLIENT_H, 's', '', '');
      wait(100);

      if (id <> 0) then
      begin
        if (not smartSetAsClient(id)) then
          print('Failed to set SMART['+ intToStr(id) +'] as Simba''s target.', TDebug.FATAL);
      end else
        print('Failed to spawn a SMART client.', TDebug.FATAL);
    end;
  end;

  print('initSmart()', TDebug.FOOTER);
end;

(*
reloadCurrentClient
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

     procedure reloadCurrentClient();

Attempts to reload our current SMART client.

.. note::

  By: Ollybest
  Last Updated: June 1, 2013 by Ollybest

Example:

.. code-block:: pascal

*)
procedure reloadCurrentClient();
var
  oldRefresh: integer;
  oldImage: TMufasaBitmap;
begin
  print('reloadCurrentClient():', TDebug.HEADER);

  oldRefresh := smartGetRefresh();

  if (smartEnableDrawing) then
  begin
    oldImage.init();
    oldImage := smartImage.bitmap.copy();
    smartFreeDrawing();
  end;

  if (not smartKillClient(__smartCurrentClient)) then
    print('Failed to kill our current client', TDebug.FATAL);

  // lets force a client just to be safe.
  initSmart(true);

  print('Restoring refresh rate back to ' + intToStr(oldRefresh));
  smartSetRefresh(oldRefresh);

  if (length(players) < 1) then
    print('No players to login!', TDebug.FATAL);

  if (waitClientReady) then
    players[currentPlayer].login()
  else
    print('Succesfully spawned a client, but RS failed to load', TDebug.FATAL);

  if (smartEnableDrawing) then
  begin
    print('Restoring smart debug image');

    smartSetupDrawing();
    oldImage.drawTransparent(0, 0, smartImage.bitmap);
    oldImage.free();
  end;

  print('reloadCurrentClient().', TDebug.FOOTER);
end;

begin
  clearDebug();
  initSmart(smartForceNewClient);

  if (smartEnableDrawing) then
    smartSetupDrawing();

  SRL_Events[EVENT_RS_UPDATE] := reloadCurrentClient;
end;



